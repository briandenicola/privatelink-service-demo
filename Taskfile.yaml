version: '3'

vars:
  VARFILE: "azure.tfvars"

tasks:
  up:
    desc: Builds end to end an AKS environment
    cmds:
    - terraform -chdir=./infrastructure workspace new {{.REGION}} || true
    - terraform -chdir=./infrastructure workspace select {{.REGION}}
    - terraform -chdir=./infrastructure init
    - task: apply
    - task: creds
    vars:
      REGION: '{{default "southcentralus" .CLI_ARGS}}'
  
  plan:
    cmds:
    - terraform -chdir=./infrastructure plan -var "region={{.REGION}}" -var-file="{{.VARFILE}}"
    vars:
      REGION: '{{default "southcentralus" .CLI_ARGS}}'

  apply:
    cmds:
    - terraform -chdir=./infrastructure apply -auto-approve -var "region={{.REGION}}" -var-file="{{.VARFILE}}"
    vars:
      REGION: '{{default "southcentralus" .CLI_ARGS}}'
    
  creds:
    desc: Grab AKS credentials 
    cmds:
    - az aks get-credentials -g {{.RG}} -n {{.AKS}} --overwrite-existing
    - kubelogin convert-kubeconfig -l azurecli
    vars:
      RG: 
        sh: terraform -chdir=./infrastructure output -raw AKS_RESOURCE_GROUP
      AKS: 
        sh: terraform -chdir=./infrastructure output -raw AKS_NAME

  run:
    desc: Run commands on AKS cluster 
    cmds:
    - az aks command invoke -g {{.RG}} -n {{.AKS}} --command {{.CMD}}
    vars:
      RG: 
        sh: terraform -chdir=./infrastructure output -raw AKS_RESOURCE_GROUP
      AKS: 
        sh: terraform -chdir=./infrastructure output -raw AKS_CLUSTER_NAME
      CMD: '{{default .CLI_ARGS}}'

  down:
    desc: Destroys all Azure resources and cleans up Terraform
    cmds:
    - az group list --tag Application="Azure Private Link for Developers Demo" --query "[].name" -o tsv | xargs -ot -n 1 az group delete -y --verbose --no-wait -n  || true
    - cd ./infrastructure; rm -rf terraform.tfstate.d .terraform.lock.hcl .terraform terraform.tfstate terraform.tfstate.backup .terraform.tfstate.lock.info || true
